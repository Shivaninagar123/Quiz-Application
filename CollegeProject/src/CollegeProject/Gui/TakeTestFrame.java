/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CollegeProject.Gui;

import CollegeProject.Dao.PerformanceDao;
import CollegeProject.Dao.QuestionDao;
import CollegeProject.pojo.Answer;
import CollegeProject.pojo.AnswerStore;
import CollegeProject.pojo.Exam;
import CollegeProject.pojo.Performance;
import CollegeProject.pojo.Question;
import CollegeProject.pojo.QuestionStore;
import CollegeProject.pojo.UserProfile;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author shiva
 */
public class TakeTestFrame extends javax.swing.JFrame {
    Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();
  Color oldColor;
    Exam exam;
    int queNo;
    int pos;
    QuestionStore qs;
    AnswerStore as;
    public TakeTestFrame() {
        initComponents();
        this.setSize(screen.width,screen.height);
        setLocationRelativeTo(null);
        lblWelcome.setText("Hello "+UserProfile.getUsername());
        queNo=1;pos=0;
        qs=new QuestionStore();
        as=new AnswerStore();
        lblQueNo.setText("Question No."+queNo);
        
      }
    public TakeTestFrame(Exam exam){
        this();
        this.exam=exam;
        lblExamSubject.setText(exam.getLanguage().toUpperCase()+" PAPER");
          loadQuestion();
        showQuestion();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblExamSubject = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaQue = new javax.swing.JTextArea();
        lblQueNo = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        rbOption1 = new javax.swing.JRadioButton();
        rbOption2 = new javax.swing.JRadioButton();
        rbOption3 = new javax.swing.JRadioButton();
        rbOption4 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        lblExamSubject.setBackground(new java.awt.Color(0, 0, 0));
        lblExamSubject.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        lblExamSubject.setForeground(new java.awt.Color(255, 255, 255));

        txtAreaQue.setColumns(20);
        txtAreaQue.setRows(5);
        jScrollPane1.setViewportView(txtAreaQue);

        lblQueNo.setBackground(new java.awt.Color(0, 0, 0));
        lblQueNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQueNo.setForeground(new java.awt.Color(255, 153, 51));

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancle");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        lblWelcome.setBackground(new java.awt.Color(0, 0, 0));
        lblWelcome.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(255, 102, 0));

        lblLogout.setBackground(new java.awt.Color(0, 0, 0));
        lblLogout.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(255, 153, 0));
        lblLogout.setText("LOG OUT");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("G0oD");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("LuCk");

        btnPrevious.setText("Previos");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbOption1);
        rbOption1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rbOption1.setForeground(new java.awt.Color(255, 153, 0));
        rbOption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOption1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbOption2);
        rbOption2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rbOption2.setForeground(new java.awt.Color(255, 153, 0));

        buttonGroup1.add(rbOption3);
        rbOption3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rbOption3.setForeground(new java.awt.Color(255, 153, 0));

        buttonGroup1.add(rbOption4);
        rbOption4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rbOption4.setForeground(new java.awt.Color(255, 153, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblQueNo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 247, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(356, 356, 356))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblExamSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rbOption3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(165, 165, 165)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(359, 359, 359))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLogout)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblLogout)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblExamSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(lblQueNo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(rbOption2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbOption1)))
                .addGap(34, 34, 34)
                .addComponent(rbOption4)
                .addGap(1, 1, 1)
                .addComponent(rbOption3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDone)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious)
                    .addComponent(btnCancel))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        /*
        public class Question {
            private String userId;
            private int qno;
            private String language;
            private String correctAnswer;
            private String answer1,answer2,answer3,answer4;
            private String question;}

        public class Answer {
            private String examId;
            private String subject;
            private String chosenAnswer;
            private String correctAnswer;
            private int qno;}

        public class Exam {
            private String ExamId;
            private String language;
            private int totalQuestions;}
        */

        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
            Question q=qs.getQuestionByQno(queNo);
            String correctAnswer=q.getCorrectAnswer();
            Answer ans=new Answer(exam.getExamId(),exam.getLanguage(),chosenAnswer,correctAnswer,queNo);
            Answer attempted=as.getAnswerByQno(queNo);//Lec17(1),time 1:16:00
            if(attempted==null){
                as.addAnswer(ans);
            }
            else{
                String prevAnswer=attempted.getChosenAnswer();
                if(prevAnswer.equals(chosenAnswer)==false){
                    int aPos=as.removeAnswer(attempted);
                    as.setAnswerAt(aPos, ans);
                }
            }
        }
        pos++;
        if(pos>=qs.getCount()){
            pos=0;
        }
        queNo++;
        if(queNo>qs.getCount()){
            queNo=1;
        }
        lblQueNo.setText("Question no."+queNo);
        showQuestion();

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        StudentPaperSelectionFrame selection=new StudentPaperSelectionFrame();
        selection.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
            Question q=qs.getQuestionByQno(queNo);
            String correctAnswer=q.getCorrectAnswer();
            Answer ans=new Answer(exam.getExamId(),exam.getLanguage(),chosenAnswer,correctAnswer,queNo);
            Answer attempted=as.getAnswerByQno(queNo);//Lec17(1),time 1:16:00
            if(attempted==null){
                as.addAnswer(ans);
            }
            else{
                String prevAnswer=attempted.getChosenAnswer();
                if(prevAnswer.equals(chosenAnswer)==false){
                    int aPos=as.removeAnswer(attempted);
                    as.setAnswerAt(aPos, ans);
                }
            }
        }
        int right=0,wrong=0;
        for(Question quest:qs.getAllQuestion()){
            int qNo=quest.getQno();
            Answer ans=as.getAnswerByQno(qNo);

            if(ans==null)
            continue;
            String correctAnswer=ans.getCorrectAnswer();
            String attemptedAnswer=ans.getChosenAnswer();
            if(correctAnswer.equals(attemptedAnswer)){
                right++;
            }
            else{
                wrong++;
            }
        }
        StringBuilder sb= new StringBuilder();
        sb.append("\n Rigth Answer="+right);
        sb.append("\n Wrong Answer="+wrong);
        sb.append("\n Unattempted="+(qs.getCount()-(right+wrong)));
        JOptionPane.showMessageDialog(null,sb.toString());

        try{
            Performance p=new Performance(exam.getExamId(),exam.getLanguage(),UserProfile.getUsername(),right,wrong,qs.getCount()-(right+wrong),(double)right/qs.getCount()*100);
            PerformanceDao.addPerformance(p);
            JOptionPane.showMessageDialog(null,"Your Questions have Been SucessFully update to DB");
            StudentPaperSelectionFrame studentPaperFrame=new StudentPaperSelectionFrame();
            studentPaperFrame.setVisible(true);
            this.dispose();

        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"DB ERROR","DB error!!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnDoneActionPerformed

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        int ans;
        ans=JOptionPane.showConfirmDialog(null,"Do You Want To Logout?","Logout",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(ans==JOptionPane.YES_OPTION)
        {
            LoginFrame loginframe=new LoginFrame();
            loginframe.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
        oldColor=lblLogout.getForeground();
        lblLogout.setForeground(Color.white);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
        lblLogout.setForeground(oldColor);        // TODO add your handling code here:
    }//GEN-LAST:event_lblLogoutMouseExited

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
            Question q=qs.getQuestionByQno(queNo);
            String correctAnswer=q.getCorrectAnswer();
            Answer ans=new Answer(exam.getExamId(),exam.getLanguage(),chosenAnswer,correctAnswer,queNo);
            Answer attempted=as.getAnswerByQno(queNo);//Lec17(1),time 1:16:00
            if(attempted==null){
                as.addAnswer(ans);
            }
            else{
                String prevAnswer=attempted.getChosenAnswer();
                if(prevAnswer.equals(chosenAnswer)==false){
                    int aPos=as.removeAnswer(attempted);
                    as.setAnswerAt(aPos, ans);
                }
            }
        }
        pos--;
        if(pos<0){
            pos=qs.getCount()-1;
        }
        queNo--;
        if(queNo<=0){
            queNo=qs.getCount();
        }
        lblQueNo.setText("Question no."+queNo);
        showQuestion();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void rbOption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOption1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOption1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblExamSubject;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblQueNo;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JRadioButton rbOption1;
    private javax.swing.JRadioButton rbOption2;
    private javax.swing.JRadioButton rbOption3;
    private javax.swing.JRadioButton rbOption4;
    private javax.swing.JTextArea txtAreaQue;
    // End of variables declaration//GEN-END:variables

private void loadQuestion() {
       qs=new QuestionStore();
        try{
            ArrayList<Question> qList=QuestionDao.getQuestionsByExamId(exam.getExamId());
            System.out.println(qList.toString());
            for(Question q:qList)
            {
                qs.addQuestion(q);
           }  
            System.out.println(qs);
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"DB ERROR","edit QueFrame!!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }

    private void initializeOptionText() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void showQuestion() {
         Question que=qs.getQuestion(pos);
         buttonGroup1.clearSelection();
       txtAreaQue.setText(que.getQuestion());
       rbOption1.setText(que.getAnswer1());
       rbOption2.setText(que.getAnswer2());
       rbOption3.setText(que.getAnswer3());
       rbOption4.setText(que.getAnswer4()); 
       Answer ans=as.getAnswerByQno(queNo);
       if(ans==null){
           return;
       }
       String str=ans.getChosenAnswer();
       switch(str){
           case "Answer1":
               rbOption1.setSelected(true);
               break;
          case "Answer2":
               rbOption2.setSelected(true);
               break;
          case "Answer3":
               rbOption3.setSelected(true);
               break;
          case "Answer4":
               rbOption4.setSelected(true);
               break;
       }
    }
    private String getUserAnswer(){
    if(rbOption1.isSelected())
        return "Answer1";
    else if(rbOption2.isSelected())
        return "Answer2";
    else if(rbOption3.isSelected())
        return "Answer3";
    else if(rbOption4.isSelected())
        return "Answer4";
    else
        return null;
    }

}
